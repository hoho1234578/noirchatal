<%- navBar %>



<div id="shop_page" class="row-fluid">
	<div style="width:70%;margin: 0 auto;">



		<table
			style="background-color: white;"
			class="table-no-bordered"
			id="table"

			data-search="true"
			data-show-columns="true"
			data-show-toggle="true"
			data-show-footer="true"

			data-pagination="true"
			data-page-list="[10, 25, 50, 100, ALL]"
			
			data-toggle="table"
			data-id-field="id"
			data-smart-display="true"
			data-mobile-responsive="true"
			>
		</table>



	</div>
	
</div>


<script>
	var data = <%- JSON.stringify(cart) %>;
	var	$table = $('#table');
	if(typeof data.dbCart == "undefined"){
		var presentCart = data.cookiesCart;
	}else{
		var presentCart = data.dbCart;
	}

	// access inner elements in the data source object
	// http://stackoverflow.com/questions/26084422/bootstrap-tables-how-to-access-inner-elements-in-the-data-source-object
	function responseHandler(res) {
        var flatArray = [];
        $.each(res, function(i, element) { 
        	element.subtotal = element.amount * element.price;
        	flatArray.push(element);
            // flatArray.push(JSON.flatten(element));
        });
        return flatArray;
    }



    function imageFormatter(value, row) {
    	return '<div class="imgCell">\
    		<div class="overlay" style="background-image:url(/images/collections/'+value+'); background-size: cover; background-position: 50%">\
    		</div>\
    	</div>';
    }



    function sumFormatter(data) {
		var field = this.field;

		var total_sum = data.reduce(function(sum, row) {
			return (sum) + (parseInt(row[field]) || 0);
		}, 0);
		return total_sum;
	}



    // remove
	function actionFormatter(value, row, index) {
	    return [
	        '<a class="remove" href="javascript:void(0)" title="Remove">',
	        '<i class="glyphicon glyphicon-remove"></i>',
	        '</a>'
	    ].join('');
	}
	window.actionEvents = {
	    'click .remove': function (e, value, row, index) {
	    	$.ajax({
		      method: "POST",
		      url: "/throwFromCart",
		      data: { productNumber: row.productNumber }
		    })
		    .done(function(data,status,xhr){
		      xhr.getResponseHeader("myHeader");
		      console.log("done");
		      $table.bootstrapTable('remove', {field: 'productNumber', values: [row.productNumber]});
		    })
		    .fail(function(){
		      console.log("fail");
		    });
	    }
	};


	console.log(presentCart);
	$table.bootstrapTable({
	    data: presentCart,
	    responseHandler: responseHandler(presentCart),
	    footerStyle: function (value, row, index) {
        	return {
        		css: { "font-weight": "bold",
        		"background-color": "white" }
        	}
    	},
	    columns: [{
	        field: 'item_img.0',
	        formatter: "imageFormatter",
	        width: "100px"
	    }, {
	        field: 'item_name',
	        title: '品名',
	        sortable: true
	    }, {
	        field: 'price',
	        title: '單價',
	        sortable: true
	    }, {
	        field: 'amount',
	        title: '數量',
	        sortable: true,
	        footerFormatter: function(){ return "總計"; }
	    }, {
	    	field: 'subtotal',
	        title: '小計',
	        sortable: true,
	        footerFormatter: sumFormatter
	    }, {
	        field: 'action',
	        title: '刪除',
	        formatter: "actionFormatter",
	        events: "actionEvents",
	        width: "60px"
	    }, ]
	});



</script>